name: CI

on:
  pull_request:
  push:

env:
  FORCE_COLOR: 1

jobs:
  test:
    name: test w/ Python ${{ matrix.python-version }}

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13-dev"]
        include:
          - { python-version: "3.8", nox-python-version: "3.8" }
          - { python-version: "3.9", nox-python-version: "3.9" }
          - { python-version: "3.10", nox-python-version: "3.10" }
          - { python-version: "3.11", nox-python-version: "3.11" }
          - { python-version: "3.12", nox-python-version: "3.12" }
          - { python-version: "3.13-dev", nox-python-version: "3.13" }

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: actions/setup-python@v5
        if: "!endsWith(matrix.python-version, '-dev')"
        with:
          python-version: ${{ matrix.python-version }}
      - uses: deadsnakes/action@v3.1.0
        if: endsWith(matrix.python-version, '-dev')
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install nox
      - run: nox --session tests-${{ matrix.nox-python-version }}
        env:
          PYTHONDEVMODE: 1
      - uses: codecov/codecov-action@v4
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - run: pip install nox
      - run: nox --session lint
